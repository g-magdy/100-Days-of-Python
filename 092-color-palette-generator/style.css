/* Basic styling for the entire body (as before) */
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    background-color: #f4f4f4;
    color: #333;
    min-height: 100vh;
}

/* Styles for the main content wrapper (as before) */
.app-container {
    width: 90vw;
    max-width: 900px;
    margin: 20px auto;
    padding: 20px;
    background-color: #fff;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    display: flex;
    flex-direction: column;
    align-items: center;
    box-sizing: border-box;
}

/* Styling for headings (as before) */
h1, h2 {
    text-align: center;
    color: #0056b3;
    margin-bottom: 10px;
}

/* Styling for the file input (as before) */
#input-image {
    margin-top: 15px;
    margin-bottom: 25px;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    cursor: pointer;
}

/* NEW: Styles for the image's "defined box" */
.image-display-box {
    width: 100%; /* Take up full width of its parent (.app-container) */
    max-width: 600px; /* Limit its maximum width, so it's not too wide on very large screens */
    height: 350px; /* Fixed height for the box - adjust this as you like! */
    overflow: hidden; /* Crucial: Hides anything that overflows this box */
    margin: 20px auto; /* Center the box and give it vertical margin */
    border: 1px solid #ddd;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    border-radius: 8px;
    background-color: #f9f9f9; /* Background for the box */
    display: flex; /* Use flexbox to center the image if it's smaller */
    justify-content: center; /* Center horizontally */
    align-items: center; /* Center vertically */
}

/* Updated: Styling for the actual image inside its box */
#image-container {
    width: 100%; /* Make image fill 100% of the box's width */
    height: 100%; /* Make image fill 100% of the box's height */
    
    /* This is the magic property! */
    object-fit: contain; /* Scales the image to fit the content box, maintaining aspect ratio.
                            The entire image will be visible. If aspect ratios don't match,
                            it will be "letterboxed" (empty space will appear). */
    /* Other options for object-fit:
       - cover: Fills the content box, maintaining aspect ratio. May clip parts of the image.
       - fill: Stretches/squishes the image to fill the content box, ignoring aspect ratio.
    */
    
    display: block; /* Important for object-fit and margin-auto to work correctly */
    /* Remove padding here, as the box itself provides the visual frame */
    /* Remove border, box-shadow, border-radius as the box now has them */
    border-radius: 8px; /* Apply border-radius to the image itself so its corners match the box */
}

/* ... (your existing CSS for body, app-container, h1, h2, input, image-display-box, image-container) ... */

/* Styles for the overall palette container */
#palette-container {
    margin-top: 30px; /* Space above the palette section */
    width: 100%;
    text-align: center; /* Center the heading within the container */
}

#palette-container h3 {
    color: #0056b3;
    margin-bottom: 20px;
}

/* Styles for the grid that holds the color swatches */
.color-swatches-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr)); /* Responsive grid columns */
    gap: 15px; /* Space between grid items */
    justify-content: center; /* Center grid items horizontally */
    padding: 10px; /* Padding inside the grid container */
}

/* Styles for individual color swatches */
.color-swatch {
    background-color: #eee; /* Fallback background */
    border: 1px solid #ddd;
    border-radius: 8px;
    padding: 15px;
    text-align: center;
    cursor: pointer; /* Indicates it's clickable */
    transition: transform 0.2s ease, box-shadow 0.2s ease; /* Smooth transition for hover effects */
    display: flex;
    flex-direction: column;
    justify-content: space-between; /* Push hex code to bottom */
    align-items: center;
    min-height: 100px; /* Give swatches a minimum height */
    box-shadow: 0 2px 5px rgba(0,0,0,0.05); /* Subtle shadow */
}

.color-swatch:hover {
    transform: translateY(-3px); /* Lift effect on hover */
    box-shadow: 0 5px 15px rgba(0,0,0,0.1); /* Stronger shadow on hover */
}

.color-swatch span {
    font-weight: bold;
    color: inherit; /* Inherit color from parent for contrast, or set a fixed color */
    background-color: rgba(255, 255, 255, 0.7); /* Slightly translucent background for text on swatch */
    padding: 4px 8px;
    border-radius: 4px;
    margin-top: auto; /* Push to bottom if flexbox is column */
    font-size: 0.9em;
    text-shadow: 1px 1px 2px rgba(0,0,0,0.3); /* For readability on any background */
}

/* Hide palette container initially until colors are generated */
#palette-container {
    display: none;
}

/* This rule applies when the image doesn't have a src attribute yet */
#image-container:not([src]) {
    display: none; /* Hide the image element entirely until a src is set */
}

#image-display-box:not([filled]) {
    display: none;
}

#drawing-canvas {
    display: none;
}